@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --foreground-color: black;
  --shadow-color: #00000027;
  /* --background-start-color: #f4fdff; */
  --background-start-color: #edf7f9;
  --background-via-color: theme(colors.red.100);
  --background-end-color: white;
  --scrollbar-color: theme(colors.red.500);
  --scrollbar-color-track: theme(colors.neutral.100);

  &.dark {
    --foreground-color: white;
    --shadow-color: #ffffff3c;
    --background-start-color: black;
    --background-via-color: theme(colors.red.950);
    --background-end-color: #3d3a3a;
    --scrollbar-color: theme(colors.red.700);
    --scrollbar-color-track: theme(colors.neutral.950);
  }

  --transition-duration: 0.35s;
  --transition-function: ease-out;
}

* {
  line-height: 1.5em;
  ::selection {
    background-color: darkgray;
    color: var(--background-start-color);
  }

  &:not(html, body) {
    transition-property: border-color, background-color, background-image, border-color,
      text-decoration, box-shadow, text-shadow, outline, filter, backdrop-filter;
    transition-duration: 0.09s, var(--transition-duration);
    transition-timing-function: var(--transition-function);
  }
}

/* :is(nav, header, footer, img, span:has(img), fieldset) {
  transition-property: border-color, background-image, background-color, box-shadow, outline, filter,
    backdrop-filter;
  transition-duration: 0.09s, var(--transition-duration);
  transition-timing-function: var(--transition-function);

  :not(&) {
    transition-property: background-color, background-image, border-color, text-decoration,
      text-shadow, outline, filter, backdrop-filter;
  }
} */

/* h1,
h2,
h3,
h4,
h5,
p,
li,
em,
legend,
::before,
::after {
  transition-property: background-color, background-image, border-color, text-decoration,
    text-shadow, outline, filter, backdrop-filter;
  transition-duration: var(--transition-duration);
  transition-timing-function: var(--transition-function);
} */

html {
  display: contents;
  scrollbar-width: thin;
  scroll-behavior: smooth;
  scrollbar-color: var(--scrollbar-color) var(--scrollbar-color-track);
  transition: scrollbar-color var(--transition-duration) var(--transition-function);
  cursor: url("assets/cursor.png"), default !important;
}

a:is(:hover, :active),
[data-hover],
[data-hover] * {
  cursor: url("assets/cursor-pointer.png"), pointer !important;
}

body {
  /* contain: content; */
  min-height: 100svh;
  max-width: 100svw;
  color: var(--foreground-color);
  background-color: var(--background-start-color) !important;
  background-image: radial-gradient(at 30% 34%, var(--background-start-color) 0px, transparent 50%),
    radial-gradient(at 100% 2%, var(--background-via-color) 0px, transparent 20%),
    radial-gradient(at 39% 47%, var(--background-end-color) 0px, transparent 30%),
    radial-gradient(at 79% 28%, var(--background-via-color) 0px, transparent 20%),
    radial-gradient(at 55% 80%, var(--background-end-color) 0px, transparent 30%) !important;
  background-repeat: no-repeat;
  overflow-y: auto;
  scroll-behavior: smooth;
  display: flex;
  flex-direction: column;
  /* overflow-x: hidden; */
  transition-property: background-image var(--transition-duration),
    background-color var(--transition-duration);
  transition-timing-function: var(--transition-function);
  will-change: background-image;

  @media (min-width: theme( screens.md)) {
    & {
      background-image: radial-gradient(
          at 30% 34%,
          var(--background-start-color) 0px,
          transparent 50%
        ),
        radial-gradient(at 92% 2%, theme(colors.red.50) 0px, transparent 70%),
        radial-gradient(at 39% 47%, var(--background-end-color) 0px, transparent 50%),
        radial-gradient(at 79% 28%, var(--background-via-color) 0px, transparent 55%),
        radial-gradient(at 55% 80%, var(--background-end-color) 0px, transparent 50%) !important;
      animation: radial 20s cubic-bezier(0.5, 0, 0.42, 1) infinite both alternate;
    }

    @keyframes radial {
      from,
      10% {
        background-size: 110%;
      }
      90%,
      to {
        background-size: 160%;
      }
    }
  }
}

@layer utilities {
  .text-balance {
    text-wrap: balance;
  }
}

i {
  display: inline-block;
  border-radius: 5%;
  padding: 0.125em 0.25em;
  animation: blink 3s cubic-bezier(0, 0.78, 0, 1) infinite alternate;
  line-height: initial;
  font-size: 0.9em;
}

@keyframes blink {
  to {
    box-shadow: 2px 2px 8px var(--shadow-color);
  }
}

p {
  margin-block: 0.5em;
}

body > [data-overlay-container] {
  display: contents;
}

.dark .next-error-h1 {
  &,
  & ~ *,
  :has(~ &) {
    color: var(--foreground-color) !important;
    border-color: var(--foreground-color) !important;
  }
}

@keyframes bounce-arrow {
  from {
    transform: translate(0, 0);
    filter: hue-rotate(0);
  }
  to {
    transform: translate(8px, -2px);
    filter: hue-rotate(180deg);
  }
}
